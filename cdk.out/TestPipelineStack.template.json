{
 "Resources": {
  "TestPipelineArtifactsBucketEncryptionKey0CB938C5": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/ArtifactsBucketEncryptionKey/Resource"
   }
  },
  "TestPipelineArtifactsBucketEncryptionKeyAliasAE177046": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/codepipeline-testpipelinestacktestpipeline4c97a6ac",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/ArtifactsBucketEncryptionKeyAlias/Resource"
   }
  },
  "TestPipelineArtifactsBucketCC233C59": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "KMSMasterKeyID": {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
          "Arn"
         ]
        },
        "SSEAlgorithm": "aws:kms"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/ArtifactsBucket/Resource"
   }
  },
  "TestPipelineArtifactsBucketPolicy5FA57B5E": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "TestPipelineArtifactsBucketCC233C59"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketCC233C59",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestPipelineArtifactsBucketCC233C59",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/ArtifactsBucket/Policy/Resource"
   }
  },
  "TestPipelineRole5A4FDA36": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Role/Resource"
   }
  },
  "TestPipelineRoleDefaultPolicy0964928F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketCC233C59",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestPipelineArtifactsBucketCC233C59",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineSourceCodePipelineActionRole52DF3214",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineBuildValidateTemplateCodePipelineActionRoleC6F8DB62",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineTestCreateTestResourcesCodePipelineActionRoleDBA455F7",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineTestRunTestsCodePipelineActionRole8CCC7B23",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineTestDeleteTestResourcesCodePipelineActionRole4222FBA4",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestPipelineRoleDefaultPolicy0964928F",
    "Roles": [
     {
      "Ref": "TestPipelineRole5A4FDA36"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Role/DefaultPolicy/Resource"
   }
  },
  "TestPipelineF8A74B39": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "EncryptionKey": {
      "Id": {
       "Fn::GetAtt": [
        "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
        "Arn"
       ]
      },
      "Type": "KMS"
     },
     "Location": {
      "Ref": "TestPipelineArtifactsBucketCC233C59"
     },
     "Type": "S3"
    },
    "Name": "TestPipeline",
    "RestartExecutionOnUpdate": true,
    "RoleArn": {
     "Fn::GetAtt": [
      "TestPipelineRole5A4FDA36",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "AWS",
         "Provider": "CodeStarSourceConnection",
         "Version": "1"
        },
        "Configuration": {
         "ConnectionArn": "arn:aws:codeconnections:ap-south-1:996200611121:connection/e8c4c109-bb57-4c4a-aeb7-9589ffa6d954",
         "FullRepositoryId": "learnysthq/plato",
         "BranchName": "CDK_demo",
         "DetectChanges": true
        },
        "Name": "Source",
        "OutputArtifacts": [
         {
          "Name": "SourceArtifact"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "TestPipelineSourceCodePipelineActionRole52DF3214",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "BuildProject097C5DB7"
         }
        },
        "InputArtifacts": [
         {
          "Name": "SourceArtifact"
         }
        ],
        "Name": "ValidateTemplate",
        "OutputArtifacts": [
         {
          "Name": "BuildArtifact"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "TestPipelineBuildValidateTemplateCodePipelineActionRoleC6F8DB62",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "TestResourcesStack",
         "Capabilities": "CAPABILITY_NAMED_IAM",
         "RoleArn": {
          "Fn::GetAtt": [
           "TestPipelineTestCreateTestResourcesRole96BB5E12",
           "Arn"
          ]
         },
         "ActionMode": "CREATE_UPDATE",
         "TemplatePath": "BuildArtifact::template.yml"
        },
        "InputArtifacts": [
         {
          "Name": "BuildArtifact"
         }
        ],
        "Name": "CreateTestResources",
        "RoleArn": {
         "Fn::GetAtt": [
          "TestPipelineTestCreateTestResourcesCodePipelineActionRoleDBA455F7",
          "Arn"
         ]
        },
        "RunOrder": 1
       },
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "TestProject2F1D5F9F"
         }
        },
        "InputArtifacts": [
         {
          "Name": "BuildArtifact"
         }
        ],
        "Name": "RunTests",
        "RoleArn": {
         "Fn::GetAtt": [
          "TestPipelineTestRunTestsCodePipelineActionRole8CCC7B23",
          "Arn"
         ]
        },
        "RunOrder": 2
       },
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "CloudFormation",
         "Version": "1"
        },
        "Configuration": {
         "StackName": "TestResourcesStack",
         "Capabilities": "CAPABILITY_NAMED_IAM",
         "RoleArn": {
          "Fn::GetAtt": [
           "TestPipelineTestDeleteTestResourcesRoleFB437441",
           "Arn"
          ]
         },
         "ActionMode": "DELETE_ONLY"
        },
        "Name": "DeleteTestResources",
        "RoleArn": {
         "Fn::GetAtt": [
          "TestPipelineTestDeleteTestResourcesCodePipelineActionRole4222FBA4",
          "Arn"
         ]
        },
        "RunOrder": 3
       }
      ],
      "Name": "Test"
     }
    ]
   },
   "DependsOn": [
    "TestPipelineRoleDefaultPolicy0964928F",
    "TestPipelineRole5A4FDA36"
   ],
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Resource"
   }
  },
  "TestPipelineSourceCodePipelineActionRole52DF3214": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Source/Source/CodePipelineActionRole/Resource"
   }
  },
  "TestPipelineSourceCodePipelineActionRoleDefaultPolicy934FF67B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "codestar-connections:UseConnection",
       "Effect": "Allow",
       "Resource": "arn:aws:codeconnections:ap-south-1:996200611121:connection/e8c4c109-bb57-4c4a-aeb7-9589ffa6d954"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketCC233C59",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestPipelineArtifactsBucketCC233C59",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "TestPipelineArtifactsBucketCC233C59",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestPipelineSourceCodePipelineActionRoleDefaultPolicy934FF67B",
    "Roles": [
     {
      "Ref": "TestPipelineSourceCodePipelineActionRole52DF3214"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Source/Source/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "TestPipelineBuildValidateTemplateCodePipelineActionRoleC6F8DB62": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Build/ValidateTemplate/CodePipelineActionRole/Resource"
   }
  },
  "TestPipelineBuildValidateTemplateCodePipelineActionRoleDefaultPolicyBD48EE07": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BuildProject097C5DB7",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestPipelineBuildValidateTemplateCodePipelineActionRoleDefaultPolicyBD48EE07",
    "Roles": [
     {
      "Ref": "TestPipelineBuildValidateTemplateCodePipelineActionRoleC6F8DB62"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Build/ValidateTemplate/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "TestPipelineTestCreateTestResourcesCodePipelineActionRoleDBA455F7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/CreateTestResources/CodePipelineActionRole/Resource"
   }
  },
  "TestPipelineTestCreateTestResourcesCodePipelineActionRoleDefaultPolicyF7AEEBF2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineTestCreateTestResourcesRole96BB5E12",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketCC233C59",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestPipelineArtifactsBucketCC233C59",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "cloudformation:CreateStack",
        "cloudformation:DescribeStack*",
        "cloudformation:GetStackPolicy",
        "cloudformation:GetTemplate*",
        "cloudformation:SetStackPolicy",
        "cloudformation:UpdateStack",
        "cloudformation:ValidateTemplate"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cloudformation:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":stack/TestResourcesStack/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestPipelineTestCreateTestResourcesCodePipelineActionRoleDefaultPolicyF7AEEBF2",
    "Roles": [
     {
      "Ref": "TestPipelineTestCreateTestResourcesCodePipelineActionRoleDBA455F7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/CreateTestResources/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "TestPipelineTestCreateTestResourcesRole96BB5E12": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudformation.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/CreateTestResources/Role/Resource"
   }
  },
  "TestPipelineTestCreateTestResourcesRoleDefaultPolicyA00F0FB6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketCC233C59",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestPipelineArtifactsBucketCC233C59",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      },
      {
       "Action": "*",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestPipelineTestCreateTestResourcesRoleDefaultPolicyA00F0FB6",
    "Roles": [
     {
      "Ref": "TestPipelineTestCreateTestResourcesRole96BB5E12"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/CreateTestResources/Role/DefaultPolicy/Resource"
   }
  },
  "TestPipelineTestRunTestsCodePipelineActionRole8CCC7B23": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/RunTests/CodePipelineActionRole/Resource"
   }
  },
  "TestPipelineTestRunTestsCodePipelineActionRoleDefaultPolicyEE463C1F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestProject2F1D5F9F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestPipelineTestRunTestsCodePipelineActionRoleDefaultPolicyEE463C1F",
    "Roles": [
     {
      "Ref": "TestPipelineTestRunTestsCodePipelineActionRole8CCC7B23"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/RunTests/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "TestPipelineTestDeleteTestResourcesCodePipelineActionRole4222FBA4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::",
           {
            "Ref": "AWS::AccountId"
           },
           ":root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/DeleteTestResources/CodePipelineActionRole/Resource"
   }
  },
  "TestPipelineTestDeleteTestResourcesCodePipelineActionRoleDefaultPolicy510BBAC9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineTestDeleteTestResourcesRoleFB437441",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "cloudformation:DeleteStack",
        "cloudformation:DescribeStack*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cloudformation:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":stack/TestResourcesStack/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestPipelineTestDeleteTestResourcesCodePipelineActionRoleDefaultPolicy510BBAC9",
    "Roles": [
     {
      "Ref": "TestPipelineTestDeleteTestResourcesCodePipelineActionRole4222FBA4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/DeleteTestResources/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "TestPipelineTestDeleteTestResourcesRoleFB437441": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudformation.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/DeleteTestResources/Role/Resource"
   }
  },
  "TestPipelineTestDeleteTestResourcesRoleDefaultPolicy65161BD8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketCC233C59",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestPipelineArtifactsBucketCC233C59",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      },
      {
       "Action": "*",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestPipelineTestDeleteTestResourcesRoleDefaultPolicy65161BD8",
    "Roles": [
     {
      "Ref": "TestPipelineTestDeleteTestResourcesRoleFB437441"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestPipeline/Test/DeleteTestResources/Role/DefaultPolicy/Resource"
   }
  },
  "BuildProjectRoleAA92C755": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/BuildProject/Role/Resource"
   }
  },
  "BuildProjectRoleDefaultPolicy3E9F248C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "BuildProject097C5DB7"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "BuildProject097C5DB7"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "BuildProject097C5DB7"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "cloudformation:ValidateTemplate",
        "cloudformation:DescribeStacks"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketCC233C59",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestPipelineArtifactsBucketCC233C59",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BuildProjectRoleDefaultPolicy3E9F248C",
    "Roles": [
     {
      "Ref": "BuildProjectRoleAA92C755"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/BuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "BuildProject097C5DB7": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": {
     "Fn::GetAtt": [
      "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
      "Arn"
     ]
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:6.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "BuildProjectRoleAA92C755",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"echo 'Current directory: $(pwd)'\",\n        \"echo 'Files in directory:'\",\n        \"ls -la\",\n        \"echo 'Looking for template.yml:'\",\n        \"find . -name 'template.yml' -type f\",\n        \"echo 'Validating CloudFormation template...'\",\n        \"if [ -f 'template.yml' ]; then aws cloudformation validate-template --template-body file://template.yml && echo 'Template validation successful'; else echo 'ERROR: template.yml not found in current directory!'; echo 'Available files:'; ls -la; exit 1; fi\",\n        \"echo 'Build phase completed'\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"template.yml\"\n    ],\n    \"base-directory\": \".\"\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/BuildProject/Resource"
   }
  },
  "TestProjectRole81829D51": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestProject/Role/Resource"
   }
  },
  "TestProjectRoleDefaultPolicy0F91812C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "TestProject2F1D5F9F"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "TestProject2F1D5F9F"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "TestProject2F1D5F9F"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:ListAllMyBuckets",
        "ec2:DescribeInstances"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "TestPipelineArtifactsBucketCC233C59",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "TestPipelineArtifactsBucketCC233C59",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestProjectRoleDefaultPolicy0F91812C",
    "Roles": [
     {
      "Ref": "TestProjectRole81829D51"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestProject/Role/DefaultPolicy/Resource"
   }
  },
  "TestProject2F1D5F9F": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "CODEPIPELINE"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": {
     "Fn::GetAtt": [
      "TestPipelineArtifactsBucketEncryptionKey0CB938C5",
      "Arn"
     ]
    },
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:6.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "TestProjectRole81829D51",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"echo 'Testing created resources...'\",\n        \"aws s3 ls | grep test-bucket || echo 'Bucket test passed'\",\n        \"aws ec2 describe-instances --filters Name=instance-state-name,Values=running --query 'Reservations[].Instances[].InstanceId' --output text | grep i- || echo 'EC2 test passed'\",\n        \"echo 'All tests completed successfully'\"\n      ]\n    }\n  }\n}",
     "Type": "CODEPIPELINE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/TestProject/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OwQ6CMAyGn8X7qCCJd+XowQUfwIwxY2FshG0xZNm76wYET//Xr03bExR5DvmBfUzG2z6T2IB/WMZ78lNPz3UrRhyFRCXA05VI9VIbB9IPBvxNzNHGuEhkJhYJAjEl+KvjvbBRrrQE1RL5vOulDgTZAL7WMl1KuU9uM/G1xqFs97/opDvB05kVQyC1MNpNPK26Ozu61P+3lVYtWtQqEDrbt1bHEooSzofOIGaTUxYHAfWSX0h1kqYyAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "TestPipelineStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "PipelineArn": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "arn:",
      {
       "Ref": "AWS::Partition"
      },
      ":codepipeline:",
      {
       "Ref": "AWS::Region"
      },
      ":",
      {
       "Ref": "AWS::AccountId"
      },
      ":",
      {
       "Ref": "TestPipelineF8A74B39"
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}